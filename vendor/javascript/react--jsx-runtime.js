import*as e from"react";var r="default"in e?e.default:e;var t={};(function(){var e=r;var n=Symbol.for("react.element");var a=Symbol.for("react.portal");var o=Symbol.for("react.fragment");var i=Symbol.for("react.strict_mode");var l=Symbol.for("react.profiler");var s=Symbol.for("react.provider");var c=Symbol.for("react.context");var u=Symbol.for("react.forward_ref");var f=Symbol.for("react.suspense");var p=Symbol.for("react.suspense_list");var y=Symbol.for("react.memo");var d=Symbol.for("react.lazy");var m=Symbol.for("react.offscreen");var v=Symbol.iterator;var g="@@iterator";function getIteratorFn(e){if(null===e||"object"!==typeof e)return null;var r=v&&e[v]||e[g];return"function"===typeof r?r:null}var b=e.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;function error(e){for(var r=arguments.length,t=new Array(r>1?r-1:0),n=1;n<r;n++)t[n-1]=arguments[n];printWarning("error",e,t)}function printWarning(e,r,t){var n=b.ReactDebugCurrentFrame;var a=n.getStackAddendum();if(""!==a){r+="%s";t=t.concat([a])}var o=t.map((function(e){return String(e)}));o.unshift("Warning: "+r);Function.prototype.apply.call(console[e],console,o)}var h=false;var C=false;var E=false;var w=false;var k=false;var S;S=Symbol.for("react.module.reference");function isValidElementType(e){return"string"===typeof e||"function"===typeof e||(!!(e===o||e===l||k||e===i||e===f||e===p||w||e===m||h||C||E)||"object"===typeof e&&null!==e&&(e.$$typeof===d||e.$$typeof===y||e.$$typeof===s||e.$$typeof===c||e.$$typeof===u||e.$$typeof===S||void 0!==e.getModuleId))}function getWrappedName(e,r,t){var n=e.displayName;if(n)return n;var a=r.displayName||r.name||"";return""!==a?t+"("+a+")":t}function getContextName(e){return e.displayName||"Context"}function getComponentNameFromType(e){if(null==e)return null;"number"===typeof e.tag&&error("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.");if("function"===typeof e)return e.displayName||e.name||null;if("string"===typeof e)return e;switch(e){case o:return"Fragment";case a:return"Portal";case l:return"Profiler";case i:return"StrictMode";case f:return"Suspense";case p:return"SuspenseList"}if("object"===typeof e)switch(e.$$typeof){case c:var r=e;return getContextName(r)+".Consumer";case s:var t=e;return getContextName(t._context)+".Provider";case u:return getWrappedName(e,e.render,"ForwardRef");case y:var n=e.displayName||null;return null!==n?n:getComponentNameFromType(e.type)||"Memo";case d:var m=e;var v=m._payload;var g=m._init;try{return getComponentNameFromType(g(v))}catch(e){return null}}return null}var j=Object.assign;var F=0;var T;var _;var R;var x;var O;var N;var P;function disabledLog(){}disabledLog.__reactDisabledLog=true;function disableLogs(){if(0===F){T=console.log;_=console.info;R=console.warn;x=console.error;O=console.group;N=console.groupCollapsed;P=console.groupEnd;var e={configurable:true,enumerable:true,value:disabledLog,writable:true};Object.defineProperties(console,{info:e,log:e,warn:e,error:e,group:e,groupCollapsed:e,groupEnd:e})}F++}function reenableLogs(){F--;if(0===F){var e={configurable:true,enumerable:true,writable:true};Object.defineProperties(console,{log:j({},e,{value:T}),info:j({},e,{value:_}),warn:j({},e,{value:R}),error:j({},e,{value:x}),group:j({},e,{value:O}),groupCollapsed:j({},e,{value:N}),groupEnd:j({},e,{value:P})})}F<0&&error("disabledDepth fell below zero. This is a bug in React. Please file an issue.")}var V=b.ReactCurrentDispatcher;var $;function describeBuiltInComponentFrame(e,r,t){if(void 0===$)try{throw Error()}catch(e){var n=e.stack.trim().match(/\n( *(at )?)/);$=n&&n[1]||""}return"\n"+$+e}var I=false;var D;var W="function"===typeof WeakMap?WeakMap:Map;D=new W;function describeNativeComponentFrame(e,r){if(!e||I)return"";var t=D.get(e);if(void 0!==t)return t;var n;I=true;var a=Error.prepareStackTrace;Error.prepareStackTrace=void 0;var o;o=V.current;V.current=null;disableLogs();try{if(r){var Fake=function(){throw Error()};Object.defineProperty(Fake.prototype,"props",{set:function(){throw Error()}});if("object"===typeof Reflect&&Reflect.construct){try{Reflect.construct(Fake,[])}catch(e){n=e}Reflect.construct(e,[],Fake)}else{try{Fake.call()}catch(e){n=e}e.call(Fake.prototype)}}else{try{throw Error()}catch(e){n=e}e()}}catch(r){if(r&&n&&"string"===typeof r.stack){var i=r.stack.split("\n");var l=n.stack.split("\n");var s=i.length-1;var c=l.length-1;while(s>=1&&c>=0&&i[s]!==l[c])c--;for(;s>=1&&c>=0;s--,c--)if(i[s]!==l[c]){if(1!==s||1!==c)do{s--;c--;if(c<0||i[s]!==l[c]){var u="\n"+i[s].replace(" at new "," at ");e.displayName&&u.includes("<anonymous>")&&(u=u.replace("<anonymous>",e.displayName));"function"===typeof e&&D.set(e,u);return u}}while(s>=1&&c>=0);break}}}finally{I=false;V.current=o;reenableLogs();Error.prepareStackTrace=a}var f=e?e.displayName||e.name:"";var p=f?describeBuiltInComponentFrame(f):"";"function"===typeof e&&D.set(e,p);return p}function describeFunctionComponentFrame(e,r,t){return describeNativeComponentFrame(e,false)}function shouldConstruct(e){var r=e.prototype;return!!(r&&r.isReactComponent)}function describeUnknownElementTypeFrameInDEV(e,r,t){if(null==e)return"";if("function"===typeof e)return describeNativeComponentFrame(e,shouldConstruct(e));if("string"===typeof e)return describeBuiltInComponentFrame(e);switch(e){case f:return describeBuiltInComponentFrame("Suspense");case p:return describeBuiltInComponentFrame("SuspenseList")}if("object"===typeof e)switch(e.$$typeof){case u:return describeFunctionComponentFrame(e.render);case y:return describeUnknownElementTypeFrameInDEV(e.type,r,t);case d:var n=e;var a=n._payload;var o=n._init;try{return describeUnknownElementTypeFrameInDEV(o(a),r,t)}catch(e){}}return""}var A=Object.prototype.hasOwnProperty;var L={};var K=b.ReactDebugCurrentFrame;function setCurrentlyValidatingElement(e){if(e){var r=e._owner;var t=describeUnknownElementTypeFrameInDEV(e.type,e._source,r?r.type:null);K.setExtraStackFrame(t)}else K.setExtraStackFrame(null)}function checkPropTypes(e,r,t,n,a){var o=Function.call.bind(A);for(var i in e)if(o(e,i)){var l=void 0;try{if("function"!==typeof e[i]){var s=Error((n||"React class")+": "+t+" type `"+i+"` is invalid; it must be a function, usually from the `prop-types` package, but received `"+typeof e[i]+"`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");s.name="Invariant Violation";throw s}l=e[i](r,i,n,t,null,"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED")}catch(e){l=e}if(l&&!(l instanceof Error)){setCurrentlyValidatingElement(a);error("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).",n||"React class",t,i,typeof l);setCurrentlyValidatingElement(null)}if(l instanceof Error&&!(l.message in L)){L[l.message]=true;setCurrentlyValidatingElement(a);error("Failed %s type: %s",t,l.message);setCurrentlyValidatingElement(null)}}}var U=Array.isArray;function isArray(e){return U(e)}function typeName(e){var r="function"===typeof Symbol&&Symbol.toStringTag;var t=r&&e[Symbol.toStringTag]||e.constructor.name||"Object";return t}function willCoercionThrow(e){try{testStringCoercion(e);return false}catch(e){return true}}function testStringCoercion(e){return""+e}function checkKeyStringCoercion(e){if(willCoercionThrow(e)){error("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.",typeName(e));return testStringCoercion(e)}}var B=b.ReactCurrentOwner;var z={key:true,ref:true,__self:true,__source:true};var M;var Y;var G;G={};function hasValidRef(e){if(A.call(e,"ref")){var r=Object.getOwnPropertyDescriptor(e,"ref").get;if(r&&r.isReactWarning)return false}return void 0!==e.ref}function hasValidKey(e){if(A.call(e,"key")){var r=Object.getOwnPropertyDescriptor(e,"key").get;if(r&&r.isReactWarning)return false}return void 0!==e.key}function warnIfStringRefCannotBeAutoConverted(e,r){if("string"===typeof e.ref&&B.current&&r&&B.current.stateNode!==r){var t=getComponentNameFromType(B.current.type);if(!G[t]){error('Component "%s" contains the string ref "%s". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref',getComponentNameFromType(B.current.type),e.ref);G[t]=true}}}function defineKeyPropWarningGetter(e,r){var warnAboutAccessingKey=function(){if(!M){M=true;error("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)",r)}};warnAboutAccessingKey.isReactWarning=true;Object.defineProperty(e,"key",{get:warnAboutAccessingKey,configurable:true})}function defineRefPropWarningGetter(e,r){var warnAboutAccessingRef=function(){if(!Y){Y=true;error("%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)",r)}};warnAboutAccessingRef.isReactWarning=true;Object.defineProperty(e,"ref",{get:warnAboutAccessingRef,configurable:true})}
/**
   * Factory method to create a new React element. This no longer adheres to
   * the class pattern, so do not use new to call it. Also, instanceof check
   * will not work. Instead test $$typeof field against Symbol.for('react.element') to check
   * if something is a React Element.
   *
   * @param {*} type
   * @param {*} props
   * @param {*} key
   * @param {string|object} ref
   * @param {*} owner
   * @param {*} self A *temporary* helper to detect places where `this` is
   * different from the `owner` when React.createElement is called, so that we
   * can warn. We want to get rid of owner and replace string `ref`s with arrow
   * functions, and as long as `this` and owner are the same, there will be no
   * change in behavior.
   * @param {*} source An annotation object (added by a transpiler or otherwise)
   * indicating filename, line number, and/or other information.
   * @internal
   */var ReactElement=function(e,r,t,a,o,i,l){var s={$$typeof:n,type:e,key:r,ref:t,props:l,_owner:i};s._store={};Object.defineProperty(s._store,"validated",{configurable:false,enumerable:false,writable:true,value:false});Object.defineProperty(s,"_self",{configurable:false,enumerable:false,writable:false,value:a});Object.defineProperty(s,"_source",{configurable:false,enumerable:false,writable:false,value:o});if(Object.freeze){Object.freeze(s.props);Object.freeze(s)}return s};
/**
   * https://github.com/reactjs/rfcs/pull/107
   * @param {*} type
   * @param {object} props
   * @param {string} key
   */function jsxDEV(e,r,t,n,a){var o;var i={};var l=null;var s=null;if(void 0!==t){checkKeyStringCoercion(t);l=""+t}if(hasValidKey(r)){checkKeyStringCoercion(r.key);l=""+r.key}if(hasValidRef(r)){s=r.ref;warnIfStringRefCannotBeAutoConverted(r,a)}for(o in r)A.call(r,o)&&!z.hasOwnProperty(o)&&(i[o]=r[o]);if(e&&e.defaultProps){var c=e.defaultProps;for(o in c)void 0===i[o]&&(i[o]=c[o])}if(l||s){var u="function"===typeof e?e.displayName||e.name||"Unknown":e;l&&defineKeyPropWarningGetter(i,u);s&&defineRefPropWarningGetter(i,u)}return ReactElement(e,l,s,a,n,B.current,i)}var q=b.ReactCurrentOwner;var H=b.ReactDebugCurrentFrame;function setCurrentlyValidatingElement$1(e){if(e){var r=e._owner;var t=describeUnknownElementTypeFrameInDEV(e.type,e._source,r?r.type:null);H.setExtraStackFrame(t)}else H.setExtraStackFrame(null)}var J;J=false;
/**
   * Verifies the object is a ReactElement.
   * See https://reactjs.org/docs/react-api.html#isvalidelement
   * @param {?object} object
   * @return {boolean} True if `object` is a ReactElement.
   * @final
   */
function isValidElement(e){return"object"===typeof e&&null!==e&&e.$$typeof===n}function getDeclarationErrorAddendum(){if(q.current){var e=getComponentNameFromType(q.current.type);if(e)return"\n\nCheck the render method of `"+e+"`."}return""}function getSourceInfoErrorAddendum(e){if(void 0!==e){var r=e.fileName.replace(/^.*[\\\/]/,"");var t=e.lineNumber;return"\n\nCheck your code at "+r+":"+t+"."}return""}var X={};function getCurrentComponentErrorInfo(e){var r=getDeclarationErrorAddendum();if(!r){var t="string"===typeof e?e:e.displayName||e.name;t&&(r="\n\nCheck the top-level render call using <"+t+">.")}return r}
/**
   * Warn if the element doesn't have an explicit key assigned to it.
   * This element is in an array. The array could grow and shrink or be
   * reordered. All children that haven't already been validated are required to
   * have a "key" property assigned to it. Error statuses are cached so a warning
   * will only be shown once.
   *
   * @internal
   * @param {ReactElement} element Element that requires a key.
   * @param {*} parentType element's parent's type.
   */function validateExplicitKey(e,r){if(e._store&&!e._store.validated&&null==e.key){e._store.validated=true;var t=getCurrentComponentErrorInfo(r);if(!X[t]){X[t]=true;var n="";e&&e._owner&&e._owner!==q.current&&(n=" It was passed a child from "+getComponentNameFromType(e._owner.type)+".");setCurrentlyValidatingElement$1(e);error('Each child in a list should have a unique "key" prop.%s%s See https://reactjs.org/link/warning-keys for more information.',t,n);setCurrentlyValidatingElement$1(null)}}}
/**
   * Ensure that every element either is passed in a static location, in an
   * array with an explicit keys property defined, or in an object literal
   * with valid key property.
   *
   * @internal
   * @param {ReactNode} node Statically passed child of any type.
   * @param {*} parentType node's parent's type.
   */function validateChildKeys(e,r){if("object"===typeof e)if(isArray(e))for(var t=0;t<e.length;t++){var n=e[t];isValidElement(n)&&validateExplicitKey(n,r)}else if(isValidElement(e))e._store&&(e._store.validated=true);else if(e){var a=getIteratorFn(e);if("function"===typeof a&&a!==e.entries){var o=a.call(e);var i;while(!(i=o.next()).done)isValidElement(i.value)&&validateExplicitKey(i.value,r)}}}
/**
   * Given an element, validate that its props follow the propTypes definition,
   * provided by the type.
   *
   * @param {ReactElement} element
   */function validatePropTypes(e){var r=e.type;if(null!==r&&void 0!==r&&"string"!==typeof r){var t;if("function"===typeof r)t=r.propTypes;else{if("object"!==typeof r||r.$$typeof!==u&&r.$$typeof!==y)return;t=r.propTypes}if(t){var n=getComponentNameFromType(r);checkPropTypes(t,e.props,"prop",n,e)}else if(void 0!==r.PropTypes&&!J){J=true;var a=getComponentNameFromType(r);error("Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?",a||"Unknown")}"function"!==typeof r.getDefaultProps||r.getDefaultProps.isReactClassApproved||error("getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.")}}
/**
   * Given a fragment, validate that it can only be provided with fragment props
   * @param {ReactElement} fragment
   */function validateFragmentProps(e){var r=Object.keys(e.props);for(var t=0;t<r.length;t++){var n=r[t];if("children"!==n&&"key"!==n){setCurrentlyValidatingElement$1(e);error("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.",n);setCurrentlyValidatingElement$1(null);break}}if(null!==e.ref){setCurrentlyValidatingElement$1(e);error("Invalid attribute `ref` supplied to `React.Fragment`.");setCurrentlyValidatingElement$1(null)}}function jsxWithValidation(e,r,t,a,i,l){var s=isValidElementType(e);if(!s){var c="";(void 0===e||"object"===typeof e&&null!==e&&0===Object.keys(e).length)&&(c+=" You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.");var u=getSourceInfoErrorAddendum(i);c+=u||getDeclarationErrorAddendum();var f;if(null===e)f="null";else if(isArray(e))f="array";else if(void 0!==e&&e.$$typeof===n){f="<"+(getComponentNameFromType(e.type)||"Unknown")+" />";c=" Did you accidentally export a JSX literal instead of a component?"}else f=typeof e;error("React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s",f,c)}var p=jsxDEV(e,r,t,i,l);if(null==p)return p;if(s){var y=r.children;if(void 0!==y)if(a)if(isArray(y)){for(var d=0;d<y.length;d++)validateChildKeys(y[d],e);Object.freeze&&Object.freeze(y)}else error("React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.");else validateChildKeys(y,e)}e===o?validateFragmentProps(p):validatePropTypes(p);return p}function jsxWithValidationStatic(e,r,t){return jsxWithValidation(e,r,t,true)}function jsxWithValidationDynamic(e,r,t){return jsxWithValidation(e,r,t,false)}var Q=jsxWithValidationDynamic;var Z=jsxWithValidationStatic;t.Fragment=o;t.jsx=Q;t.jsxs=Z})();const n=t.Fragment,a=t.jsx,o=t.jsxs;export{n as Fragment,t as default,a as jsx,o as jsxs};

